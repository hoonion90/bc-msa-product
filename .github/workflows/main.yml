name: Web Server CI  # 워크플로우의 이름

on:
  push:
    branches:
      - main  # main 브랜치에 push 이벤트가 발생할 때 실행
  # pull_request:
  #   branches:
  #     - main  # (주석 처리됨) main 브랜치로의 PR이 열리거나 변경될 때 실행

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Ubuntu 최신 버전에서 실행

    steps:
      - name: Checkout repository  # 현재 리포지토리를 체크아웃 (코드를 가져옴)
        uses: actions/checkout@v3

      - name: Pull Web Server Docker Image  # Apache 웹 서버(httpd) 최신 이미지를 가져옴
        run: |
          docker pull httpd:latest

      - name: Run Web Server Container  # 가져온 이미지를 컨테이너로 실행
        run: |
          docker run -d -p 8082:80 --name webserver httpd:latest
          # -d: 백그라운드 실행
          # -p 8082:80: 로컬 포트 8082을 컨테이너의 80번 포트에 매핑
          # --name webserver: 컨테이너 이름을 'webserver'로 설정

      - name: Wait for Web Server to Start  # 웹 서버가 시작될 시간을 주기 위해 잠시 대기
        run: |
          sleep 5

      - name: Test Web Server Response  # 서버가 정상적으로 실행되었는지 확인
        run: |
          curl -I http://localhost:8082 | grep "200 OK"
          # HTTP 헤더를 가져와서 '200 OK' 응답이 있는지 검사

      - name: Stop and Remove Container  # 테스트 후 컨테이너를 정리 (중지 후 삭제)
        run: |
          docker stop webserver && docker rm webserver
